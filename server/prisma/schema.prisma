// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  firstName String?
  lastName  String?
  role      UserRole @default(USER)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  sessions Session[]

  @@map("users")
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

enum UserRole {
  ADMIN
  USER
}

model InventoryItem {
  id             String         @id @default(cuid())
  name           String
  description    String?
  category       String?
  unit           String         // לדוגמה: 'ק"ג', 'יחידה', 'בקבוק'
  minStockLevel  Int            @default(0)
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  stockMovements StockMovement[]
  //suppliers       InventoryItemSupplier[]
}

model StockMovement {
  id              String         @id @default(cuid())
  type            MovementType
  quantity        Int
  note            String?
  createdAt       DateTime       @default(now())

  // Relations
  inventoryItem   InventoryItem  @relation(fields: [inventoryItemId], references: [id])
  inventoryItemId String


}

  enum MovementType {
  IN   
  OUT  
}